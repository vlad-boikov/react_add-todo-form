{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","setUser","updatedTodos","setUpdatedTodos","noUser","setNoUser","noTitle","setNoTitle","maxTodoId","Math","max","updatedTodo","changeHandler","e","target","value","text","result","match","join","spellingChecker","action","method","onSubmit","preventDefault","htmlFor","style","marginRight","type","placeholder","onChange","disabled","userFromServer","onClick","trim","newTodo","currentToDo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdd6449c.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype UserInf = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<UserInf> = ({\n  user: {\n    email,\n    name,\n  },\n}) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype ToDoInf = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<ToDoInf> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype ToDo = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<ToDo> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number) {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [updatedTodos, setUpdatedTodos] = useState(todos);\n  const [noUser, setNoUser] = useState(false);\n  const [noTitle, setNoTitle] = useState(false);\n\n  const maxTodoId = Math.max(\n    ...updatedTodos.map(updatedTodo => updatedTodo.id),\n  );\n\n  function spellingChecker(text:string) {\n    const result = text.match(/[a-zA-Zа-яА-Я\\d\\s]/g);\n\n    return result ? result.join('') : '';\n  }\n\n  function submitHandler() {\n    if (!user) {\n      setNoUser(true);\n    }\n\n    if (!title.trim()) {\n      setNoTitle(true);\n    }\n\n    if (!user || !title.trim()) {\n      return;\n    }\n\n    const newTodo = {\n      id: maxTodoId + 1,\n      title,\n      completed: false,\n      userId: +user,\n      user: getUser(+user),\n    };\n\n    setUpdatedTodos(currentToDo => (\n      [\n        ...currentToDo,\n        newTodo,\n      ]\n    ));\n\n    setTitle('');\n    setUser('');\n  }\n\n  function changeHandler(e: ChangeEvent) {\n    const target = e.target as HTMLInputElement;\n\n    if (target.id === 'select') {\n      setUser(target.value);\n      setNoUser(false);\n    }\n\n    if (target.id === 'title') {\n      setTitle(spellingChecker(target.value));\n      setNoTitle(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={e => e.preventDefault()}\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n            style={{ marginRight: 5 }}\n          >\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={e => changeHandler(e)}\n          />\n          {noTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"select\"\n            style={{ marginRight: 5 }}\n          >\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={user}\n            onChange={e => changeHandler(e)}\n          >\n            <option\n              value=\"\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(userFromServer => (\n              <option\n                key={userFromServer.id}\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {noUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={submitHandler}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={updatedTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}